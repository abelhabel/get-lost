var helpers = require("../../public/helpers.js");
var minerals = require("../../public/minerals.js");
var GameObject = require("../../public/objects/gameobject.js");
var Polygon = require("../../public/objects/polygon.js");
var Square = require("../../public/objects/square.js");
var Circle = require("../../public/objects/circle.js");
var Projectile = require("../../public/objects/projectile.js");
var Star = require("../../public/objects/star.js");
var Guardian = require("../../public/objects/guardian.js");
var PolygonBoss = require("../../public/objects/polygonboss.js");
var CircleBoss = require("../../public/objects/circleboss.js");




var Bosses = {
  glowFace: function(x, y) {
    var output = [];
    var scale = 0.5;
    var leftEye = new Circle(x - 100 * scale, y - 100 * scale, 50 * scale);
    var rightEye = new Circle(x + 100 * scale, y - 100 * scale, 50 * scale);
    leftEye.fill = rightEye.fill = true;
    leftEye.fillStyle = rightEye.fillStyle = "rgb(255, 0, 0)";

    var boss = new PolygonBoss(x, y, 300 * scale, "Glow Face");
    boss.geometricPrototype = "Polygon";
    output.push(boss, leftEye, rightEye);

    leftEye.follow = rightEye.follow = boss;
    leftEye.followDistanceX = -100 * scale;
    leftEye.followDistanceY = -100 * scale;
    rightEye.followDistanceX = 100 * scale;
    rightEye.followDistanceY = -100 * scale;
    leftEye.followPattern = rightEye.followPattern = 'normal';

    leftEye.currentHP =
    leftEye.maxHP =
    rightEye.currentHP = 
    rightEye.maxHP = 1;
    leftEye.checkCollision = rightEye.checkCollision = true;

    leftEye.team = rightEye.team = boss.id;

    boss.fill = true;
    boss.fillStyle = "rgba(40, 180, 59, 0.5)";
    boss.points = 6;
    boss.rotationSpeed = 0.01;
    boss.checkCollision = true;
    boss.currentHP = boss.maxHP = 50;
    boss.xp = 250;
    var guardian;
    for(var i = 0; i < boss.points; i += 1) {
      guardian = new Guardian(x, y, boss);
      guardian.follow = boss;
      guardian.followDistanceX = guardian.followDistanceY = boss.r + 200;
      guardian.followRotation = i * Math.PI * 2 / (boss.points);
      guardian.followRotationSpeed = 0.02;
      guardian.followPattern = "circle";
      guardian.currentHP = guardian.maxHP = 10;
      guardian.r = 50 * scale; 
      guardian.points = 6;
      guardian.animate = true;
      guardian.projectileSpeed = 4;
      guardian.reloadSpeed = 240;
      output.push(guardian);
      // boss.followers.push(guardian);

    }


    return output;
  },
  spherlo: function(x, y) {
    var output = [];
    var scale = 0.5;
    var boss = new CircleBoss(x, y, 300 * scale, "Spherlo");
    boss.geometricPrototype = "Circle";
    output.push(boss);
    boss.fill = true;
    boss.fillStyle = "rgba(34, 180, 180, 0.5)";
    boss.rotationSpeed = 0.01;
    boss.checkCollision = true;
    boss.currentHP = boss.maxHP = 50;
    boss.xp = 150;
    boss.reloadSpeed = 150;
    boss.projectileSpeed = 4;

    boss.points = 4;
    var guardian;
    var guardians = [];
    for(var i = 0; i < boss.points; i += 1) {
      guardian = new Circle(x, y, 50 * scale);
      guardian.follow = boss;
      var outside = 150;
      var minR = boss.r / 4;
      var maxR = boss.r * 2;
      guardian.followDistanceX = i % 2 == 0 ? minR : maxR;
      guardian.followDistanceY = i % 2 == 0 ? maxR : minR;
      guardian.followDistanceY *= 2;
      guardian.followRotation = i * (Math.PI * 2 / boss.points);
      guardian.followRotationSpeed = 0.05;
      guardian.followPattern = "circle";
      guardian.currentHP = guardian.maxHP = 10;
      guardian.r = 50 * scale; 
      guardian.points = 6;
      guardian.animate = true;
      guardian.projectileSpeed = 4;

      guardian.checkCollision = true;
      guardian.currentHP = guardian.maxHP = 10;
      guardian.damage = 2;

      guardian.fillStyle = boss.fillStyle;
      guardian.fill = true;
      guardian.stroke = false;
      guardian.points = 4;

      output.push(guardian);
      guardians.push(guardian);
    }
    for(var i = 0; i < guardians.length; i += 1) {
      guardian = guardians[i];
      for(var j = 0; j < guardian.points; j += 1) {
        mini = new Circle(x, y, 10 * scale);
        mini.follow = guardian;
        var outside = 100;
        var minR = guardian.r / 4;
        var maxR = guardian.r * 2;
        mini.followDistanceX = j % 2 == 0 ? minR : maxR;
        mini.followDistanceY = j % 2 == 0 ? maxR : minR;
        mini.followRotation = Math.PI * 2 * j / guardian.points;
        mini.followRotationSpeed = 0.05;
        mini.followPattern = "circle";
        mini.currentHP = mini.maxHP = 10;
        mini.animate = true;
        mini.projectileSpeed = 4;

        mini.checkCollision = true;
        mini.currentHP = mini.maxHP = 10;
        mini.damage = 1;

        mini.fillStyle = guardian.fillStyle;
        mini.fill = true;
        mini.stroke = false;
        // output.push(mini);
        output.push(mini);
      }
    }

    return output;
  }
};

module.exports = Bosses;